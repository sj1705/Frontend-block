{"version":3,"sources":["assets/images/blockpharm-logo2.png","assets/images/blockpharm-logo.png","AssignRoles.js","Home.js","AddMed.js","Supply.js","Track.js","App.js","index.js"],"names":["AssignRoles","history","useHistory","useEffect","loadWeb3","loadBlockchaindata","useState","currentaccount","setCurrentaccount","loader","setloader","SupplyChain","setSupplyChain","RMSname","setRMSname","MANname","setMANname","DISname","setDISname","RETname","setRETname","RMSplace","setRMSplace","MANplace","setMANplace","DISplace","setDISplace","RETplace","setRETplace","RMSaddress","setRMSaddress","MANaddress","setMANaddress","DISaddress","setDISaddress","RETaddress","setRETaddress","RMS","setRMS","MAN","setMAN","DIS","setDIS","RET","setRET","a","window","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","account","net","getId","networkId","console","log","networkData","SupplyChainABI","networks","supplychain","Contract","abi","address","methods","rmsCtr","call","rms","i","manCtr","man","disCtr","dis","retCtr","ret","className","handlerSubmitRMS","event","preventDefault","addRMS","send","from","handlerSubmitMAN","addManufacturer","handlerSubmitDIS","addDistributor","handlerSubmitRET","addRetailer","onClick","push","onSubmit","type","onChange","target","value","placeholder","required","scope","Object","keys","map","key","id","name","place","addr","Home","href","src","require","default","width","height","alt","style","fontSize","color","fontStyle","margin","Table","striped","bordered","hover","variant","opacity","textAlign","backgroundColor","rel","AddMed","MED","setMED","MedName","setMedName","MedDes","setMedDes","MedStage","setMedStage","medicineCtr","medCtr","med","medStage","MedicineStock","showStage","handlerSubmitMED","addMedicine","description","Supply","ID","setID","handlerChangeID","handlerSubmitRMSsupply","RMSsupply","handlerSubmitManufacturing","Manufacturing","handlerSubmitDistribute","Distribute","handlerSubmitRetail","Retail","handlerSubmitSold","sold","Track","TrackTillSold","showTrackTillSold","TrackTillRetail","showTrackTillRetail","TrackTillDistribution","showTrackTillDistribution","TrackTillManufacture","showTrackTillManufacture","TrackTillRMS","showTrackTillRMS","TrackTillOrdered","showTrackTillOrdered","RMSid","MANid","DISid","RETid","handlerSubmit","ctr","stage","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.796a7287.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blockpharm-logo2.350320da.png\";","export default __webpack_public_path__ + \"static/media/blockpharm-logo.62b73d56.png\";","import React, { useState, useEffect } from 'react';\nimport Web3 from \"web3\";\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\"\nimport { useHistory } from \"react-router-dom\"\n\nfunction AssignRoles() {\n    const history = useHistory()\n    useEffect(() => {\n        loadWeb3();\n        loadBlockchaindata();\n    }, [])\n    const [currentaccount, setCurrentaccount] = useState(\"\");\n    const [loader, setloader] = useState(true);\n    const [SupplyChain, setSupplyChain] = useState();\n    const [RMSname, setRMSname] = useState();\n    const [MANname, setMANname] = useState();\n    const [DISname, setDISname] = useState();\n    const [RETname, setRETname] = useState();\n    const [RMSplace, setRMSplace] = useState();\n    const [MANplace, setMANplace] = useState();\n    const [DISplace, setDISplace] = useState();\n    const [RETplace, setRETplace] = useState();\n    const [RMSaddress, setRMSaddress] = useState();\n    const [MANaddress, setMANaddress] = useState();\n    const [DISaddress, setDISaddress] = useState();\n    const [RETaddress, setRETaddress] = useState();\n    const [RMS, setRMS] = useState();\n    const [MAN, setMAN] = useState();\n    const [DIS, setDIS] = useState();\n    const [RET, setRET] = useState();\n\n    const loadWeb3 = async () => {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        } else {\n            window.alert(\n                \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n            );\n        }\n    };\n\n    const loadBlockchaindata = async () => {\n        setloader(true);\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        const account = accounts[0];\n        setCurrentaccount(account);\n        const networkId = await web3.eth.net.getId();\n        console.log(networkId)\n\n        const networkData = SupplyChainABI.networks[networkId];\n        if (networkData) {\n            const supplychain = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\n            setSupplyChain(supplychain);\n            var i;\n            const rmsCtr = await supplychain.methods.rmsCtr().call();\n            const rms = {};\n            for (i = 0; i < rmsCtr; i++) {\n                rms[i] = await supplychain.methods.RMS(i + 1).call();\n            }\n            setRMS(rms);\n            const manCtr = await supplychain.methods.manCtr().call();\n            const man = {};\n            for (i = 0; i < manCtr; i++) {\n                man[i] = await supplychain.methods.MAN(i + 1).call();\n            }\n            setMAN(man);\n            const disCtr = await supplychain.methods.disCtr().call();\n            const dis = {};\n            for (i = 0; i < disCtr; i++) {\n                dis[i] = await supplychain.methods.DIS(i + 1).call();\n            }\n            setDIS(dis);\n            const retCtr = await supplychain.methods.retCtr().call();\n            const ret = {};\n            for (i = 0; i < retCtr; i++) {\n                ret[i] = await supplychain.methods.RET(i + 1).call();\n            }\n            setRET(ret);\n            setloader(false);\n        }\n        else {\n            window.alert('The smart contract is not deployed to current network')\n        }\n    }\n    if (loader) {\n        return (\n            <div>\n                <h1 className=\"wait\">Loading...</h1>\n            </div>\n        )\n\n    }\n    const redirect_to_home = () => {\n        history.push('/')\n    }\n    const handlerChangeAddressRMS = (event) => {\n        setRMSaddress(event.target.value);\n    }\n    const handlerChangePlaceRMS = (event) => {\n        setRMSplace(event.target.value);\n    }\n    const handlerChangeNameRMS = (event) => {\n        setRMSname(event.target.value);\n    }\n    const handlerChangeAddressMAN = (event) => {\n        setMANaddress(event.target.value);\n    }\n    const handlerChangePlaceMAN = (event) => {\n        setMANplace(event.target.value);\n    }\n    const handlerChangeNameMAN = (event) => {\n        setMANname(event.target.value);\n    }\n    const handlerChangeAddressDIS = (event) => {\n        setDISaddress(event.target.value);\n    }\n    const handlerChangePlaceDIS = (event) => {\n        setDISplace(event.target.value);\n    }\n    const handlerChangeNameDIS = (event) => {\n        setDISname(event.target.value);\n    }\n    const handlerChangeAddressRET = (event) => {\n        setRETaddress(event.target.value);\n    }\n    const handlerChangePlaceRET = (event) => {\n        setRETplace(event.target.value);\n    }\n    const handlerChangeNameRET = (event) => {\n        setRETname(event.target.value);\n    }\n    const handlerSubmitRMS = async (event) => {\n        event.preventDefault();\n        try {\n            var reciept = await SupplyChain.methods.addRMS(RMSaddress, RMSname, RMSplace).send({ from: currentaccount });\n            if (reciept) {\n                loadBlockchaindata();\n            }\n        }\n        catch (err) {\n            alert(\"An error occured!!!\")\n        }\n    }\n    const handlerSubmitMAN = async (event) => {\n        event.preventDefault();\n        try {\n            var reciept = await SupplyChain.methods.addManufacturer(MANaddress, MANname, MANplace).send({ from: currentaccount });\n            if (reciept) {\n                loadBlockchaindata();\n            }\n        }\n        catch (err) {\n            alert(\"An error occured!!!\")\n        }\n    }\n    const handlerSubmitDIS = async (event) => {\n        event.preventDefault();\n        try {\n            var reciept = await SupplyChain.methods.addDistributor(DISaddress, DISname, DISplace).send({ from: currentaccount });\n            if (reciept) {\n                loadBlockchaindata();\n            }\n        }\n        catch (err) {\n            alert(\"An error occured!!!\")\n        }\n    }\n    const handlerSubmitRET = async (event) => {\n        event.preventDefault();\n        try {\n            var reciept = await SupplyChain.methods.addRetailer(RETaddress, RETname, RETplace).send({ from: currentaccount });\n            if (reciept) {\n                loadBlockchaindata();\n            }\n        }\n        catch (err) {\n            alert(\"An error occured!!!\")\n        }\n    }\n\n\n\n    return (\n        <div>\n            <span><b>Current Account Address:</b> {currentaccount}</span>\n            <span onClick={redirect_to_home} className=\"btn btn-outline-danger btn-sm\">HOME</span>\n            <h4>Raw Material Suppliers:</h4>\n            <form onSubmit={handlerSubmitRMS}>\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeAddressRMS} placeholder=\"Ethereum Address\" required />\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeNameRMS} placeholder=\"Raw Material Supplier Name\" required />\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangePlaceRMS} placeholder=\"Based In\" required />\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitRMS}>Register</button>\n            </form>\n            <table className=\"table table-sm\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Place</th>\n                        <th scope=\"col\">Ethereum Address</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(RMS).map(function (key) {\n                        return (\n                            <tr key={key}>\n                                <td>{RMS[key].id}</td>\n                                <td>{RMS[key].name}</td>\n                                <td>{RMS[key].place}</td>\n                                <td>{RMS[key].addr}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <h4>Manufacturers:</h4>\n            <form onSubmit={handlerSubmitMAN}>\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeAddressMAN} placeholder=\"Ethereum Address\" required />\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeNameMAN} placeholder=\"Manufacturer Name\" required />\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangePlaceMAN} placeholder=\"Based In\" required />\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitMAN}>Register</button>\n            </form>\n            <table className=\"table table-sm\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Place</th>\n                        <th scope=\"col\">Ethereum Address</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(MAN).map(function (key) {\n                        return (\n                            <tr key={key}>\n                                <td>{MAN[key].id}</td>\n                                <td>{MAN[key].name}</td>\n                                <td>{MAN[key].place}</td>\n                                <td>{MAN[key].addr}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <h4>Distributors:</h4>\n            <form onSubmit={handlerSubmitDIS}>\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeAddressDIS} placeholder=\"Ethereum Address\" required />\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeNameDIS} placeholder=\"Distributor Name\" required />\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangePlaceDIS} placeholder=\"Based In\" required />\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitDIS}>Register</button>\n            </form>\n            <table className=\"table table-sm\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Place</th>\n                        <th scope=\"col\">Ethereum Address</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(DIS).map(function (key) {\n                        return (\n                            <tr key={key}>\n                                <td>{DIS[key].id}</td>\n                                <td>{DIS[key].name}</td>\n                                <td>{DIS[key].place}</td>\n                                <td>{DIS[key].addr}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <h4>Retailers:</h4>\n            <form onSubmit={handlerSubmitRET}>\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeAddressRET} placeholder=\"Ethereum Address\" required />\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeNameRET} placeholder=\"Retailer Name\" required />\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangePlaceRET} placeholder=\"Based In\" required />\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitRET}>Register</button>\n            </form>\n            <table className=\"table table-sm\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Place</th>\n                        <th scope=\"col\">Ethereum Address</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(RET).map(function (key) {\n                        return (\n                            <tr key={key}>\n                                <td>{RET[key].id}</td>\n                                <td>{RET[key].name}</td>\n                                <td>{RET[key].place}</td>\n                                <td>{RET[key].addr}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default AssignRoles\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Table from \"react-bootstrap/Table\";\nimport { FaGithub, FaLinkedin } from \"react-icons/fa\";\n\nfunction Home() {\n    const history = useHistory();\n    const redirect_to_roles = () => {\n        history.push(\"/roles\");\n    };\n    const redirect_to_addmed = () => {\n        history.push(\"/addmed\");\n    };\n    const redirect_to_supply = () => {\n        history.push(\"/supply\");\n    };\n    const redirect_to_track = () => {\n        history.push(\"/track\");\n    };\n    return (\n        <div>\n            <div className=\"text-center\">\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light justify-content-center\">\n                    <a className=\"navbar-brand\" href=\"/\">\n                        <img\n                            src={require(\"./assets/images/blockpharm-logo2.png\").default}\n                            width=\"60em\"\n                            height=\"60em\"\n                            className=\"d-inline-block mx-auto align-top\"\n                            alt=\"BlockPharm logo\"\n                        />\n                        <strong style={{ fontSize: \"1.8em\" }}>\n                            <span style={{ color: \"#146C94\" }}> Block</span>\n                            <span style={{ color: \"#F45050\" }}>Pharm</span>\n                        </strong>\n                    </a>\n                </nav>\n            </div>\n            <div className=\"Frontal\">\n                <br />\n                <h4 style={{ fontStyle: \"italic\", color: \"green\" }}>\n                    Blockchain technology to develop a safe and transparent supply chain\n                    management solution for the pharmaceutical business\n                </h4>\n\n                <br />\n            </div>\n\n            <div style={{ width: \"70%\", margin: \"auto\" }}>\n                <Table striped bordered hover variant=\"light\" style={{ opacity: 0.9 }}>\n                    <thead>\n                    <tr>\n                        <th>Steps</th>\n                        <th>Description</th>\n                        <th>Link</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>1</td>\n                        <td>\n                            Owner Should Register Raw material suppliers ,Manufacturers,\n                            Distributors and Retailers\n                            <br />\n                            <em>\n                                (<b>Note: </b>This is a one time step. Skip to step 2 if\n                                already done)\n                            </em>\n                        </td>\n                        <td>\n                            <button\n                                onClick={redirect_to_roles}\n                                className=\"btn btn-outline-primary btn-sm\"\n                            >\n                                Register\n                            </button>\n                            <br />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>2</td>\n                        <td>Owner should order medicines</td>\n                        <td>\n                            <button\n                                onClick={redirect_to_addmed}\n                                className=\"btn btn-outline-primary btn-sm\"\n                            >\n                                Order Medicines\n                            </button>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>3</td>\n                        <td>Control Supply Chain</td>\n                        <td>\n                            <button\n                                onClick={redirect_to_supply}\n                                className=\"btn btn-outline-primary btn-sm\"\n                            >\n                                Control Supply Chain\n                            </button>\n                            <br />\n                        </td>\n                    </tr>\n                    </tbody>\n                </Table>\n                <br />\n\n                <div style={{ width: \"20%\", margin: \"auto\" }}>\n                    <Table\n                        striped\n                        bordered\n                        hover\n                        variant=\"light\"\n                        style={{ opacity: 0.9 }}\n                    >\n                        <tbody>\n                        <tr>\n                            <td style={{ width: \"50%\", textAlign: \"center\" }}>\n                                {\" \"}\n                                <button\n                                    onClick={redirect_to_track}\n                                    className=\"btn btn-outline-primary btn-sm\"\n                                >\n                                    <strong>Track Medicines</strong>\n                                </button>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </Table>\n                </div>\n            </div>\n            <br />\n            <footer style={{ backgroundColor: \"#f8f9fa\" }}>\n                <div className=\"container py-5\">\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            <h5>About </h5>\n                            <p>\n                                Our motivation is to develop a safe and transparent supply chain\n                                management solution for the pharmaceutical business using\n                                blockchain technology.\n                            </p>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <h5>Get in Touch : </h5>\n                            <ul className=\"list-unstyled\">\n                                <li>\n                                    <p>\n                                        <a\n                                            href=\"https://github.com/Saumya-Purohit\"\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            <FaGithub />\n                                            Saumya-Purohit\n                                        </a>{\" \"}\n                                        <em> | </em>\n                                        <a\n                                            href=\"https://www.linkedin.com/in/saumya-purohit-a9765a240\"\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            <FaLinkedin />\n                                            Saumya Purohit\n                                        </a>\n                                    </p>\n                                </li>\n                                <li>\n                                    <p>\n                                        <a\n                                            href=\"https://github.com/sj1705\"\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            <FaGithub />\n                                            sj1705\n                                        </a>{\" \"}\n                                        <em> | </em>\n                                        <a\n                                            href=\"https://www.linkedin.com/in/sj1705\"\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            <FaLinkedin />\n                                            Shrestha Jaiswal\n                                        </a>\n                                    </p>\n                                </li>\n                            </ul>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <img\n                                src={require(\"./assets/images/blockpharm-logo.png\").default}\n                                alt=\"Logo\"\n                                style={{ width: \"100%\", height: \"80%\" }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport Web3 from \"web3\";\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\"\n\nfunction AddMed() {\n    const history = useHistory()\n    useEffect(() => {\n        loadWeb3();\n        loadBlockchaindata();\n    }, [])\n\n    const [currentaccount, setCurrentaccount] = useState(\"\");\n    const [loader, setloader] = useState(true);\n    const [SupplyChain, setSupplyChain] = useState();\n    const [MED, setMED] = useState();\n    const [MedName, setMedName] = useState();\n    const [MedDes, setMedDes] = useState();\n    const [MedStage, setMedStage] = useState();\n\n\n    const loadWeb3 = async () => {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        } else {\n            window.alert(\n                \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n            );\n        }\n    };\n\n    const loadBlockchaindata = async () => {\n        setloader(true);\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        const account = accounts[0];\n        setCurrentaccount(account);\n        const networkId = await web3.eth.net.getId();\n        const networkData = SupplyChainABI.networks[networkId];\n        if (networkData) {\n            const supplychain = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\n            setSupplyChain(supplychain);\n            var i;\n            const medCtr = await supplychain.methods.medicineCtr().call();\n            const med = {};\n            const medStage = [];\n            for (i = 0; i < medCtr; i++) {\n                med[i] = await supplychain.methods.MedicineStock(i + 1).call();\n                medStage[i] = await supplychain.methods.showStage(i + 1).call();\n            }\n            setMED(med);\n            setMedStage(medStage);\n            setloader(false);\n        }\n        else {\n            window.alert('The smart contract is not deployed to current network')\n        }\n    }\n    if (loader) {\n        return (\n            <div>\n                <h1 className=\"wait\">Loading...</h1>\n            </div>\n        )\n\n    }\n    const redirect_to_home = () => {\n        history.push('/')\n    }\n    const handlerChangeNameMED = (event) => {\n        setMedName(event.target.value);\n    }\n    const handlerChangeDesMED = (event) => {\n        setMedDes(event.target.value);\n    }\n    const handlerSubmitMED = async (event) => {\n        event.preventDefault();\n        try {\n            var reciept = await SupplyChain.methods.addMedicine(MedName, MedDes).send({ from: currentaccount });\n            if (reciept) {\n                loadBlockchaindata();\n            }\n        }\n        catch (err) {\n            alert(\"An error occured!!!\")\n        }\n    }\n    return (\n        <div>\n            <span><b>Current Account Address:</b> {currentaccount}</span>\n            <span onClick={redirect_to_home} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\n            <br />\n            <h5>Add Medicine Order:</h5>\n            <form onSubmit={handlerSubmitMED}>\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeNameMED} placeholder=\"Medicine Name\" required />\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeDesMED} placeholder=\"Medicine Description\" required />\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitMED}>Order</button>\n            </form>\n            <br />\n            <h5>Ordered Medicines:</h5>\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Current Stage</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(MED).map(function (key) {\n                        return (\n                            <tr key={key}>\n                                <td>{MED[key].id}</td>\n                                <td>{MED[key].name}</td>\n                                <td>{MED[key].description}</td>\n                                <td>\n                                    {\n                                        MedStage[key]\n                                    }\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default AddMed\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport Web3 from \"web3\";\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\"\n\nfunction Supply() {\n    const history = useHistory()\n    useEffect(() => {\n        loadWeb3();\n        loadBlockchaindata();\n    }, [])\n\n    const [currentaccount, setCurrentaccount] = useState(\"\");\n    const [loader, setloader] = useState(true);\n    const [SupplyChain, setSupplyChain] = useState();\n    const [MED, setMED] = useState();\n    const [MedStage, setMedStage] = useState();\n    const [ID, setID] = useState();\n\n\n    const loadWeb3 = async () => {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        } else {\n            window.alert(\n                \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n            );\n        }\n    };\n    const loadBlockchaindata = async () => {\n        setloader(true);\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        const account = accounts[0];\n        setCurrentaccount(account);\n        const networkId = await web3.eth.net.getId();\n        const networkData = SupplyChainABI.networks[networkId];\n        if (networkData) {\n            const supplychain = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\n            setSupplyChain(supplychain);\n            var i;\n            const medCtr = await supplychain.methods.medicineCtr().call();\n            const med = {};\n            const medStage = [];\n            for (i = 0; i < medCtr; i++) {\n                med[i] = await supplychain.methods.MedicineStock(i + 1).call();\n                medStage[i] = await supplychain.methods.showStage(i + 1).call();\n            }\n            setMED(med);\n            setMedStage(medStage);\n            setloader(false);\n        }\n        else {\n            window.alert('The smart contract is not deployed to current network')\n        }\n    }\n    if (loader) {\n        return (\n            <div>\n                <h1 className=\"wait\">Loading...</h1>\n            </div>\n        )\n\n    }\n    const redirect_to_home = () => {\n        history.push('/')\n    }\n    const handlerChangeID = (event) => {\n        setID(event.target.value);\n    }\n    const handlerSubmitRMSsupply = async (event) => {\n        event.preventDefault();\n        try {\n            var reciept = await SupplyChain.methods.RMSsupply(ID).send({ from: currentaccount });\n            if (reciept) {\n                loadBlockchaindata();\n            }\n        }\n        catch (err) {\n            alert(\"An error occured!!!\")\n        }\n    }\n    const handlerSubmitManufacturing = async (event) => {\n        event.preventDefault();\n        try {\n            var reciept = await SupplyChain.methods.Manufacturing(ID).send({ from: currentaccount });\n            if (reciept) {\n                loadBlockchaindata();\n            }\n        }\n        catch (err) {\n            alert(\"An error occured!!!\")\n        }\n    }\n    const handlerSubmitDistribute = async (event) => {\n        event.preventDefault();\n        try {\n            var reciept = await SupplyChain.methods.Distribute(ID).send({ from: currentaccount });\n            if (reciept) {\n                loadBlockchaindata();\n            }\n        }\n        catch (err) {\n            alert(\"An error occured!!!\")\n        }\n    }\n    const handlerSubmitRetail = async (event) => {\n        event.preventDefault();\n        try {\n            var reciept = await SupplyChain.methods.Retail(ID).send({ from: currentaccount });\n            if (reciept) {\n                loadBlockchaindata();\n            }\n        }\n        catch (err) {\n            alert(\"An error occured!!!\")\n        }\n    }\n    const handlerSubmitSold = async (event) => {\n        event.preventDefault();\n        try {\n            var reciept = await SupplyChain.methods.sold(ID).send({ from: currentaccount });\n            if (reciept) {\n                loadBlockchaindata();\n            }\n        }\n        catch (err) {\n            alert(\"An error occured!!!\")\n        }\n    }\n    return (\n        <div>\n            <span><b>Current Account Address:</b> {currentaccount}</span>\n            <span onClick={redirect_to_home} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\n            <h6><b>Supply Chain Flow:</b></h6>\n            <p>Medicine Order -&gt; Raw Material Supplier -&gt; Manufacturer -&gt; Distributor -&gt; Retailer -&gt; Consumer</p>\n            <table className=\"table table-sm table-dark\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Medicine ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Current Processing Stage</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(MED).map(function (key) {\n                        return (\n                            <tr key={key}>\n                                <td>{MED[key].id}</td>\n                                <td>{MED[key].name}</td>\n                                <td>{MED[key].description}</td>\n                                <td>\n                                    {\n                                        MedStage[key]\n                                    }\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <h5><b>Step 1: Supply Raw Materials</b>(Only a registered Raw Material Supplier can perform this step):-</h5>\n            <form onSubmit={handlerSubmitRMSsupply}>\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitRMSsupply}>Supply</button>\n            </form>\n            <hr />\n            <br />\n            <h5><b>Step 2: Manufacture</b>(Only a registered Manufacturer can perform this step):-</h5>\n            <form onSubmit={handlerSubmitManufacturing}>\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitManufacturing}>Manufacture</button>\n            </form>\n            <hr />\n            <br />\n            <h5><b>Step 3: Distribute</b>(Only a registered Distributor can perform this step):-</h5>\n            <form onSubmit={handlerSubmitDistribute}>\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitDistribute}>Distribute</button>\n            </form>\n            <hr />\n            <br />\n            <h5><b>Step 4: Retail</b>(Only a registered Retailer can perform this step):-</h5>\n            <form onSubmit={handlerSubmitRetail}>\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitRetail}>Retail</button>\n            </form>\n            <hr />\n            <br />\n            <h5><b>Step 5: Mark as sold</b>(Only a registered Retailer can perform this step):-</h5>\n            <form onSubmit={handlerSubmitSold}>\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitSold}>Sold</button>\n            </form>\n            <hr />\n        </div>\n    )\n}\n\nexport default Supply\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport Web3 from \"web3\";\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\"\n\nfunction Track() {\n    const history = useHistory()\n    useEffect(() => {\n        loadWeb3();\n        loadBlockchaindata();\n    }, [])\n\n    const [currentaccount, setCurrentaccount] = useState(\"\");\n    const [loader, setloader] = useState(true);\n    const [SupplyChain, setSupplyChain] = useState();\n    const [MED, setMED] = useState();\n    const [MedStage, setMedStage] = useState();\n    const [ID, setID] = useState();\n    const [RMS, setRMS] = useState();\n    const [MAN, setMAN] = useState();\n    const [DIS, setDIS] = useState();\n    const [RET, setRET] = useState();\n    const [TrackTillSold, showTrackTillSold] = useState(false);\n    const [TrackTillRetail, showTrackTillRetail] = useState(false);\n    const [TrackTillDistribution, showTrackTillDistribution] = useState(false);\n    const [TrackTillManufacture, showTrackTillManufacture] = useState(false);\n    const [TrackTillRMS, showTrackTillRMS] = useState(false);\n    const [TrackTillOrdered, showTrackTillOrdered] = useState(false);\n\n    const loadWeb3 = async () => {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        } else {\n            window.alert(\n                \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n            );\n        }\n    };\n    const loadBlockchaindata = async () => {\n        setloader(true);\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        const account = accounts[0];\n        setCurrentaccount(account);\n        const networkId = await web3.eth.net.getId();\n        const networkData = SupplyChainABI.networks[networkId];\n        if (networkData) {\n            const supplychain = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\n            setSupplyChain(supplychain);\n            var i;\n            const medCtr = await supplychain.methods.medicineCtr().call();\n            const med = {};\n            const medStage = [];\n            for (i = 0; i < medCtr; i++) {\n                med[i + 1] = await supplychain.methods.MedicineStock(i + 1).call();\n                medStage[i + 1] = await supplychain.methods.showStage(i + 1).call();\n            }\n            setMED(med);\n            setMedStage(medStage);\n            const rmsCtr = await supplychain.methods.rmsCtr().call();\n            const rms = {};\n            for (i = 0; i < rmsCtr; i++) {\n                rms[i + 1] = await supplychain.methods.RMS(i + 1).call();\n            }\n            setRMS(rms);\n            const manCtr = await supplychain.methods.manCtr().call();\n            const man = {};\n            for (i = 0; i < manCtr; i++) {\n                man[i + 1] = await supplychain.methods.MAN(i + 1).call();\n            }\n            setMAN(man);\n            const disCtr = await supplychain.methods.disCtr().call();\n            const dis = {};\n            for (i = 0; i < disCtr; i++) {\n                dis[i + 1] = await supplychain.methods.DIS(i + 1).call();\n            }\n            setDIS(dis);\n            const retCtr = await supplychain.methods.retCtr().call();\n            const ret = {};\n            for (i = 0; i < retCtr; i++) {\n                ret[i + 1] = await supplychain.methods.RET(i + 1).call();\n            }\n            setRET(ret);\n            setloader(false);\n        }\n        else {\n            window.alert('The smart contract is not deployed to current network')\n        }\n    }\n    if (loader) {\n        return (\n            <div>\n                <h1 className=\"wait\">Loading...</h1>\n            </div>\n        )\n    }\n    if (TrackTillSold) {\n        return (\n            <div className=\"container-xl\">\n                <article className=\"col-4\">\n                    <h3><b><u>Medicine:</u></b></h3>\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\n                    <br />\n                    <span><b>Name:</b> {MED[ID].name}</span>\n                    <br />\n                    <span><b>Description: </b>{MED[ID].description}</span>\n                    <br />\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\n                </article>\n                <hr />\n                <br />\n                <section className=\"row\">\n\n                    <article className=\"col-3\">\n                        <h4><u>Raw Materials Supplied by:</u></h4>\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\n                    </article>\n                    <span>&#10132;</span>\n                    <article className=\"col-3\">\n                        <h4><u>Manufactured by:</u></h4>\n                        <p><b>Manufacturer ID: </b>{MAN[MED[ID].MANid].id}</p>\n                        <p><b>Name:</b> {MAN[MED[ID].MANid].name}</p>\n                        <p><b>Place: </b>{MAN[MED[ID].MANid].place}</p>\n                    </article>\n                    <span>&#10132;</span>\n                    <article className=\"col-3\">\n                        <h4><u>Distributed by:</u></h4>\n                        <p><b>Distributor ID: </b>{DIS[MED[ID].DISid].id}</p>\n                        <p><b>Name:</b> {DIS[MED[ID].DISid].name}</p>\n                        <p><b>Place: </b>{DIS[MED[ID].DISid].place}</p>\n                    </article>\n                    <span>&#10132;</span>\n                    <article className=\"col-3\">\n                        <h4><u>Retailed by:</u></h4>\n                        <p><b>Retailer ID: </b>{RET[MED[ID].RETid].id}</p>\n                        <p><b>Name:</b> {RET[MED[ID].RETid].name}</p>\n                        <p><b>Place: </b>{RET[MED[ID].RETid].place}</p>\n                    </article>\n                    <span>&#10132;</span>\n                    <article className=\"col-3\">\n                        <h4><u>Sold</u></h4>\n                    </article>\n                </section>\n                <button onClick={() => {\n                    showTrackTillSold(false);\n                }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\n                <span onClick={() => {\n                    history.push('/')\n                }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\n            </div >\n        )\n    }\n    if (TrackTillRetail) {\n        return (\n            <div className=\"container-xl\">\n                <article className=\"col-4\">\n                    <h3><b><u>Medicine:</u></b></h3>\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\n                    <br />\n                    <span><b>Name:</b> {MED[ID].name}</span>\n                    <br />\n                    <span><b>Description: </b>{MED[ID].description}</span>\n                    <br />\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\n                </article>\n                <hr />\n                <br />\n                <section className=\"row\">\n\n                    <article className=\"col-3\">\n                        <h4><u>Raw Materials Supplied by:</u></h4>\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\n                    </article>\n                    <span>&#10132;</span>\n                    <article className=\"col-3\">\n                        <h4><u>Manufactured by:</u></h4>\n                        <p><b>Manufacturer ID: </b>{MAN[MED[ID].MANid].id}</p>\n                        <p><b>Name:</b> {MAN[MED[ID].MANid].name}</p>\n                        <p><b>Place: </b>{MAN[MED[ID].MANid].place}</p>\n                    </article>\n                    <span>&#10132;</span>\n                    <article className=\"col-3\">\n                        <h4><u>Distributed by:</u></h4>\n                        <p><b>Distributor ID: </b>{DIS[MED[ID].DISid].id}</p>\n                        <p><b>Name:</b> {DIS[MED[ID].DISid].name}</p>\n                        <p><b>Place: </b>{DIS[MED[ID].DISid].place}</p>\n                    </article>\n                    <span>&#10132;</span>\n                    <article className=\"col-3\">\n                        <h4><u>Retailed by:</u></h4>\n                        <p><b>Retailer ID: </b>{RET[MED[ID].RETid].id}</p>\n                        <p><b>Name:</b> {RET[MED[ID].RETid].name}</p>\n                        <p><b>Place: </b>{RET[MED[ID].RETid].place}</p>\n                    </article>\n                </section>\n                <button onClick={() => {\n                    showTrackTillRetail(false);\n                }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\n                <span onClick={() => {\n                    history.push('/')\n                }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\n            </div >\n        )\n    }\n    if (TrackTillDistribution) {\n        return (\n            <div className=\"container-xl\">\n                <article className=\"col-4\">\n                    <h3><b><u>Medicine:</u></b></h3>\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\n                    <br />\n                    <span><b>Name:</b> {MED[ID].name}</span>\n                    <br />\n                    <span><b>Description: </b>{MED[ID].description}</span>\n                    <br />\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\n                </article>\n                <hr />\n                <br />\n                <section className=\"row\">\n\n                    <article className=\"col-3\">\n                        <h4><u>Raw Materials Supplied by:</u></h4>\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\n                    </article>\n                    <span>&#10132;</span>\n                    <article className=\"col-3\">\n                        <h4><u>Manufactured by:</u></h4>\n                        <p><b>Manufacturer ID: </b>{MAN[MED[ID].MANid].id}</p>\n                        <p><b>Name:</b> {MAN[MED[ID].MANid].name}</p>\n                        <p><b>Place: </b>{MAN[MED[ID].MANid].place}</p>\n                    </article>\n                    <span>&#10132;</span>\n                    <article className=\"col-3\">\n                        <h4><u>Distributed by:</u></h4>\n                        <p><b>Distributor ID: </b>{DIS[MED[ID].DISid].id}</p>\n                        <p><b>Name:</b> {DIS[MED[ID].DISid].name}</p>\n                        <p><b>Place: </b>{DIS[MED[ID].DISid].place}</p>\n                    </article>\n                </section>\n                <button onClick={() => {\n                    showTrackTillDistribution(false);\n                }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\n                <span onClick={() => {\n                    history.push('/')\n                }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\n            </div >\n        )\n    }\n    if (TrackTillManufacture) {\n        return (\n            <div className=\"container-xl\">\n                <article className=\"col-4\">\n                    <h3><b><u>Medicine:</u></b></h3>\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\n                    <br />\n                    <span><b>Name:</b> {MED[ID].name}</span>\n                    <br />\n                    <span><b>Description: </b>{MED[ID].description}</span>\n                    <br />\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\n                </article>\n                <hr />\n                <br />\n                <section className=\"row\">\n\n                    <article className=\"col-3\">\n                        <h4><u>Raw Materials Supplied by:</u></h4>\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\n                    </article>\n                    <span>&#10132;</span>\n                    <article className=\"col-3\">\n                        <h4><u>Manufactured by:</u></h4>\n                        <p><b>Manufacturer ID: </b>{MAN[MED[ID].MANid].id}</p>\n                        <p><b>Name:</b> {MAN[MED[ID].MANid].name}</p>\n                        <p><b>Place: </b>{MAN[MED[ID].MANid].place}</p>\n                    </article>\n                </section>\n                <button onClick={() => {\n                    showTrackTillManufacture(false);\n                }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\n                <span onClick={() => {\n                    history.push('/')\n                }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\n            </div >\n        )\n    }\n    if (TrackTillRMS) {\n        return (\n            <div className=\"container-xl\">\n                <article className=\"col-4\">\n                    <h3><b><u>Medicine:</u></b></h3>\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\n                    <br />\n                    <span><b>Name:</b> {MED[ID].name}</span>\n                    <br />\n                    <span><b>Description: </b>{MED[ID].description}</span>\n                    <br />\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\n                </article>\n                <hr />\n                <br />\n                <section className=\"row\">\n\n                    <article className=\"col-3\">\n                        <h4><u>Raw Materials Supplied by:</u></h4>\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\n                    </article>\n                </section>\n                <button onClick={() => {\n                    showTrackTillRMS(false);\n                }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\n                <span onClick={() => {\n                    history.push('/')\n                }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\n            </div >\n        )\n    }\n    if (TrackTillOrdered) {\n        return (\n            <div className=\"container-xl\">\n                <article className=\"col-4\">\n                    <h3><b><u>Medicine:</u></b></h3>\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\n                    <br />\n                    <span><b>Name:</b> {MED[ID].name}</span>\n                    <br />\n                    <span><b>Description: </b>{MED[ID].description}</span>\n                    <br />\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\n                    <hr />\n                    <br />\n                    <h5>Medicine Not Yet Processed...</h5>\n                    <button onClick={() => {\n                        showTrackTillOrdered(false);\n                    }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\n                    <span onClick={() => {\n                        history.push('/')\n                    }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\n                </article>\n                {/* <section className=\"row\">\n                    \n                    <article className=\"col-3\">\n                        <h4><u>Raw Materials Supplied by:</u></h4>\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\n                    </article>\n                </section> */}\n            </div >\n        )\n    }\n    const handlerChangeID = (event) => {\n        setID(event.target.value);\n    }\n    const redirect_to_home = () => {\n        history.push('/')\n    }\n    const handlerSubmit = async (event) => {\n        event.preventDefault();\n        var ctr = await SupplyChain.methods.medicineCtr().call();\n        if (!((ID > 0) && (ID <= ctr)))\n            alert(\"Invalid Medicine ID!!!\");\n        else {\n            // eslint-disable-next-line\n            if (MED[ID].stage == 5)\n                showTrackTillSold(true);\n            // eslint-disable-next-line\n            else if (MED[ID].stage == 4)\n                showTrackTillRetail(true);\n            // eslint-disable-next-line\n            else if (MED[ID].stage == 3)\n                showTrackTillDistribution(true);\n            // eslint-disable-next-line\n            else if (MED[ID].stage == 2)\n                showTrackTillManufacture(true);\n            // eslint-disable-next-line\n            else if (MED[ID].stage == 1)\n                showTrackTillRMS(true);\n            else\n                showTrackTillOrdered(true);\n\n        }\n    }\n\n    return (\n        <div>\n            <span><b>Current Account Address:</b> {currentaccount}</span>\n            <span onClick={redirect_to_home} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\n            <table className=\"table table-sm table-bordered\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Medicine ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Current Processing Stage</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(MED).map(function (key) {\n                        return (\n                            <tr key={key}>\n                                <td>{MED[key].id}</td>\n                                <td>{MED[key].name}</td>\n                                <td>{MED[key].description}</td>\n                                <td>\n                                    {\n                                        MedStage[key]\n                                    }\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <h5>Enter Medicine ID to Track it</h5>\n\n            <form onSubmit={handlerSubmit}>\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmit}>Track</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Track\n","import './App.css';\nimport AssignRoles from './AssignRoles';\nimport Home from './Home';\nimport AddMed from './AddMed';\nimport Supply from './Supply'\nimport Track from './Track'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/roles\" component={AssignRoles} />\n          <Route path=\"/addmed\" component={AddMed} />\n          <Route path=\"/supply\" component={Supply} />\n          <Route path=\"/track\" component={Track} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}